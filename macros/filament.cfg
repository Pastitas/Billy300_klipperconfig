#####################################################
################# Filament sensor ####################
######################################################

[respond]
default_type: echo

[delayed_gcode clear_display]
gcode:
  M117 # clear display message

[force_move]
enable_force_move: True

######## filament sensor button macros ############
[gcode_button sensor_fs]
#pin: PC7  # !!!!!!!!!!!!!!!!!!!!!change with the pin name to which the sensor is connected!!!!!!!!!!!!!!!!!!!!!
pin: P1.28 # remove the negation "!" for sensor v1 - use just PA9 as example
press_gcode: # sensor released
  {% if (printer.print_stats.state == "printing") %}  
    #PAUSE # call printer pause macto
    filament_change_state1   
  #{% else %}  
   # SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=0
  {% endif %} 
  UPDATE_DELAYED_GCODE ID=clear_loadbusy DURATION=2
  UPDATE_DELAYED_GCODE ID=clear_unloadbusy DURATION=2    
  SET_GCODE_VARIABLE MACRO=filament_unload VARIABLE=filamentpresent VALUE=0

release_gcode: #gcode macro for filament load, sensor pressed
  {% if (printer.print_stats.state != "printing") %}
    filament_load
  {% else %}
    M117 Printing! Can't load filament right now!
    M118 Printing! Can't load filament right now! 
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
  {% endif %} 
  SET_GCODE_VARIABLE MACRO=filament_unload VARIABLE=filamentpresent VALUE=1
  UPDATE_DELAYED_GCODE ID=clear_changebusy DURATION=2

#********************************************************************************************************
####### Filament Unload button macros ########

# [gcode_button sensor_fu]
# #pin: PA8  # !!!!!!!!!!!!!!!!!!!!!!!change with the pin name to which the sensor is connected!!!!!!!!!!!!!!!!!!!!!
# pin:  # remove the negation "!" for sensor v1 - use just PA10 as example
# release_gcode:  # filament unload procedure   
#   {% if (printer.print_stats.state != "printing")%} # requires [virtual_sdcard]   
#      filament_unload     
#   {% else %}
#      M117 Printing! Can't unload filament right now!
#      M118 Printing! Can't unload filament right now! #M117 message to display    
#   {% endif %}
# press_gcode: # do not add any macro call here

#**************************************************************************************************************
######## State machine for printer status #########

[delayed_gcode clear_changebusy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_change_state1 VARIABLE=changebusy VALUE=0
  M118 Clear Load busy!  


[delayed_gcode set_loadbusy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=1
  M118 Set Load busy! 


[delayed_gcode clear_loadbusy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=0
  M118 Clear Load busy!  

[gcode_macro filament_change_state1]
variable_changebusy: 0
gcode:
  {% if changebusy == 0 %}
    PAUSE # call printer pause macro
    SET_GCODE_VARIABLE MACRO=filament_change_state1 VARIABLE=changebusy VALUE=1
    M118 Filament runnout!
    M117 Filament runnout!
    ##filament_change_state2     # comment this line if you do not want to automatically unload filament in case there is a runnout detected.
  {% else %}
  {% endif %}

[gcode_macro filament_change_state2]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=1    
  PANEL_BEEP # only for panel due
  M118 Unloading filament...
  M117 Unloading filament...
  M82 #set extruder to absolute mode
  G92 E0 
  # {% if printer[printer.toolhead.extruder].temperature < 185 %} # hardcoded threshold
  {% if printer.extruder.can_extrude|lower != 'true' %} # checing for minimum extrusion temperature
    # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
    M118 Hotend heating!  
    M109 S225 T0 # set temperature and wait
  {% endif %}
  G1 E5 F3000 # purge
  G0 E-5 F3600 	#extract filament to cold end
  G0 E-70 F300	# continue extraction slow allow filament to be cooled enough before reaches the gears
  #G0 E-20 F300	# for fast testing only  
  M400
  M117 Load new filament! Wait until is loaded, then resume printing.
  M118 Load new filament! Wait until is loaded, then resume printing.
  #SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=0
  UPDATE_DELAYED_GCODE ID=set_loadbusy DURATION=2.5 # timing must be set to clear delay plus 0.5s. is due to wait to remove filament before starting load even in case there is a blob at the tip of the extracted filament which woudl trigger the sensor twice

[gcode_macro filament_load]
variable_loadbusy: 0
gcode:    
    {% if loadbusy == 0 %} # requires [virtual_sdcard] 
    SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=1
    SET_GCODE_VARIABLE MACRO=filament_unload VARIABLE=unloadbusy VALUE=1
    {% if printer.extruder.can_extrude|lower != 'true' %} # checing for minimum extrusion temperature
      # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)      
      M104 S235 T0 # set temperature and wait, 235 deg C is a good value for most of filament types.
    {% endif %}
    PANEL_BEEP # only for panel due
    M117 Filament loading!    
    M118 Filament loading!  
    M82           #set extruder to absolute mode
    G92 E0
    G4 P2000        # wait for two seconds
    FORCE_MOVE STEPPER=extruder DISTANCE=55 VELOCITY=5 ACCEL=1000  # load filament inside the gears force move needs to be enabled
    # check for extruder ready - hotend temperature is high enough, extrude 50mm then check temperature again. To avoid cold extrusion when filament load was started with hot hotend but temperature set to 0
    {% if printer.extruder.can_extrude|lower != 'true' %} # checing for minimum extrusion temperature
      # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
      M118 Hotend heating!  
      M109 S225 T0 # set temperature and wait, 235 deg C is a good value for most of filament types.
    {% endif %}
    G1 E100 F300 # extrude 200mm   
    M400
    {% if (printer.print_stats.state != "printing") or (printer.print_stats.state != "paused")%} 
      M104 S0 T0 # if not printing or paused due to filament change set the extruder temp to 0
    {% endif %}  
    M117 Filament load complete!    
    M118 Filament load complete!   
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
    UPDATE_DELAYED_GCODE ID=clear_unloadbusy DURATION=2   
    {% else %}
      M118 Filament already loaded!    
    {% endif %}  


[gcode_macro filament_unload]
variable_unloadbusy: 0
variable_filamentpresent: 0
gcode:
    #{% if unloadbusy == 0 and filamentpresent == 1 %} # requires [virtual_sdcard]  
    {% if unloadbusy == 0 %} # requires [virtual_sdcard]  
      SET_GCODE_VARIABLE MACRO=filament_unload VARIABLE=unloadbusy VALUE=1
      SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=1
      PANEL_BEEP # only for panel due
      M118 Filament unloading!
      M117 Filament unloading!  
      M82 #set extruder to absolute mode
      G92 E0 
      {% if printer.extruder.can_extrude|lower != 'true' %} # checing for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
        M118 Hotend heating!  
        M109 S225 T0 # set temperature and wait      
      {% endif %}
      G1 E10 F300 # purge
      G0 E-5 F3600 	#extract filament to cold end
      G0 E-70 F300	# continue extraction slow allow filament to be cooled enough before reaches the gears
      #G0 E-20 F300	# for fast testing only
      M104 S0 T0 
      M400
      M118 Filament unload complete!
      M117 Filament unload complete! 
      #SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=0
      UPDATE_DELAYED_GCODE ID=clear_display DURATION=10            
    {% else %}      
      M118 Nothing to unload!
    {% endif %}

[delayed_gcode clear_unloadbusy]
gcode:
  SET_GCODE_VARIABLE MACRO=filament_unload VARIABLE=unloadbusy VALUE=0
  M118 Clear Unload busy!  

############################################################
##################### Filament changes ##################### 
############################################################

[gcode_macro _load_unload]
variable_is_printing: 1
gcode:
  # Klipper thinks we're printing if parking homed first, so this is a hack to
  # prevent that from happening. The caller sets the value and we clear it.
  SET_GCODE_VARIABLE MACRO=_load_unload VARIABLE=is_printing VALUE="{1}"
  {% set saved_extruder = printer.toolhead.extruder %}
  {% set EXTRUDER = params.EXTRUDER|default(saved_extruder)|lower %}
  {% if 'MINIMUM' in params %}
    {% set MINIMUM = params.MINIMUM|int %}
  # This is the special case for a filament change after an idle timeout.
  {% elif printer.pause_resume.is_paused and printer[EXTRUDER].target == 0 and
          printer["gcode_macro resume"].saved_extruder_temp %}
    {% set MINIMUM = printer["gcode_macro resume"].saved_extruder_temp %}
  {% else %}
    {% set MINIMUM =
             printer.configfile.settings[EXTRUDER].min_extrude_temp + 5.0 %}
  {% endif %}
  {% if MINIMUM < printer.configfile.settings[EXTRUDER].min_extrude_temp %}
    { action_raise_error("Extrude below minimum temp.") }
  {% elif printer.pause_resume.is_paused %}
    # Clear the saved E if we're (un-)loading while paused.
    SET_GCODE_VARIABLE MACRO=resume VARIABLE=saved_e VALUE="{0.0}"
  {% elif printer.idle_timeout.state == "Printing" and is_printing %}
    { action_raise_error("Command not valid during printing.") }
    M117 Command not valid during printing.
  {% endif %}
  {% set km = printer["gcode_macro _km_globals"] %}
  {% set SPEED = params.SPEED|default(km.load_speed)|int %}
  {% set priming_length = km.load_priming_length %}
  {% set LENGTH = params.LENGTH|default(km.load_length)|float - priming_length%}
  {% if LENGTH < 0 %}
    {% set priming_length = (priming_length + LENGTH, 0)|max %}
    {% set LENGTH = 0 %}
  {% endif %}
  SAVE_GCODE_STATE NAME=_KM_LOAD_UNLOAD
  {% if EXTRUDER != saved_extruder%}
    ACTIVATE_EXTRUDER EXTRUDER={EXTRUDER}
  {% endif %}
  {% if printer[EXTRUDER].target < MINIMUM %}
    M109 S{MINIMUM}
  {% endif %}
  M83
  {% if params.LOAD|int %}
    G1 E{LENGTH} F{SPEED}
    G1 E{priming_length} F{(km.load_priming_speed, SPEED)|min}
    G1 E{'%.4f' % -printer["gcode_macro resume"].saved_e} F{km.load_speed}
  {% else %}
    G1 E3.0 F{SPEED}
    G4 P500
    G1 E{'%.4f' % -priming_length} F{(km.load_priming_speed, SPEED)|min}
    G1 E{'%.4f' % -LENGTH} F{SPEED}
  {% endif %}
  RESTORE_GCODE_STATE NAME=_KM_LOAD_UNLOAD

[gcode_macro load_filament]
description: Loads filament to the extruder.
  Usage: LOAD_FILAMENT [LENGTH=<distance>] [SPEED=<speed>]
                       [EXTRUDER=<extruder>] [MINIMUM=<temperature>]
gcode:
  _LOAD_UNLOAD LOAD=1{% for k in params
    %}{' '~k~'="'~params[k]~'"'}{% endfor %}

  # Dummy argument block for Mainsail
  {% set dummy = None if True else "
  {% set dummy = params.LENGTH|default(variable_load_length)|float %}
  {% set dummy = params.SPEED|default(variable_load_speed)|float %}
  {% set dummy = params.EXTRUDER|default(current extruder) %}
  {% set dummy = params.MINIMUM|default(min_extrude_temp)|int %}
  " %} # End argument block for Mainsail

[gcode_macro unload_filament]
description: Unloads filament from the extruder.
  Usage: UNLOAD_FILAMENT [LENGTH=<distance>] [SPEED=<speed>]
                         [EXTRUDER=<extruder>] [MINIMUM=<temperature>]
gcode:
  _LOAD_UNLOAD LOAD=0{% for k in params
    %}{' '~k~'="'~params[k]~'"'}{% endfor %}

  # Dummy argument block for Mainsail
  {% set dummy = None if True else "
  {% set dummy = params.LENGTH|default(variable_load_length)|float %}
  {% set dummy = params.SPEED|default(variable_load_speed)|float %}
  {% set dummy = params.EXTRUDER|default(default extruder) %}
  {% set dummy = params.MINIMUM|default(min_extrude_temp)|int %}
  " %} # End argument block for Mainsail


