[gcode_macro _check_kinematic_limits]
gcode:
  {% set toolhead = printer.toolhead %}
  {% if params.X and (params.X|float < toolhead.axis_minimum.x or
                      params.X|float > toolhead.axis_maximum.x) %}
    {action_raise_error("X[%.3f] must be between %.3f and %.3f."
                        | format(params.X|float, toolhead.axis_minimum.x,
                                 toolhead.axis_maximum.x))}
  {% elif params.Y and (params.Y|float < toolhead.axis_minimum.y or
                        params.Y|float > toolhead.axis_maximum.y) %}
    {action_raise_error("Y[%.3f] must be between %.3f and %.3f."
                        | format(params.Y|float, toolhead.axis_minimum.y,
                                 toolhead.axis_maximum.y))}
  {% elif params.Z and (params.Z|float < toolhead.axis_minimum.z or
                        params.Z|float > toolhead.axis_maximum.z) %}
    {action_raise_error("Z[%.3f] must be between %.3f and %.3f."
                        | format(params.Z|float, toolhead.axis_minimum.z,
                                 toolhead.axis_maximum.z))}
  {% elif params.E and (params.E|float|abs > printer.configfile.settings[
                          "extruder"].max_extrude_only_distance) %}
    {action_raise_error("E[%.4f] exceeds max_extrude_only_distance[%.4f]."
       | format(params.E|float|abs, printer.configfile.settings[
                                      "extruder"].max_extrude_only_distance))}
  {% endif %}

[gcode_macro g28]
description: Wraps the G28 command to add the Marlin "O" parameter so that
  already homed axes will not be homed again. See the Klipper documentation on
  G28 for the behavior of the other parameters.
  Usage: G28 [O] ...
rename_existing: G28.6245197
gcode:
  {% set do_homing = True %}
  {% if 'O' in params %}
    # No axes means home them all, so add the list in before pruning.
    {% if params|select('in', 'XYZ')|list|length == 0 %}
      {% for k in 'XYZ' %}
        {% set dummy = params.__setitem__(k, '') %}
      {% endfor %}
    {% endif %}
    # Prune out the already homed axes.
    {% for k in params|select('in', 'XYZ')|list %}
      {% if k|lower in printer.toolhead.homed_axes %}
        {% set dummy = params.__delitem__(k) %}
      {% endif %}
    {% endfor %}
    {% set dummy = params.__delitem__('O') %}
    # If we don't have anything left we can skip homing.
    {% set do_homing = params|select('in', 'XYZ')|list|length > 0 %}
  {% else %}
  {% endif %}

  {% if do_homing %}
    G28.6245197{% for k in params %}{' ' ~ k ~ params[k]}{% endfor %}
  {% endif %}


# [homing_override]
# axes: xyz
# gcode:
# [homing_override]
# axes: xyz
# gcode:
#   {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

#   {% if home_all or 'X' in params %}
#     # Always use consistent run_current on A/B steppers during sensorless homing
#     {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
#     {% set HOME_CURRENT = 0.7 %}
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
#     # Home
#     G28 X
#     # Move away
#     G91
#     G1 X10 F1200
#     # Wait just a secondâ€¦ (give StallGuard registers time to clear)
#     G4 P10
#     # Set current during print
#     SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
#   {% endif %}
  
#   {% if home_all or 'Y' in params %}
#     G28 Y
#   {% endif %}

#   {% if home_all or 'Z' in params %}
#     G28 Z
#     G1 Z10
#   {% endif %}
